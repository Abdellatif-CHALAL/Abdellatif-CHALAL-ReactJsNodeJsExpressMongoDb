[{"/Volumes/Data/ReactApp/mon-app/src/reportWebVitals.js":"1","/Volumes/Data/ReactApp/mon-app/src/App.js":"2","/Volumes/Data/ReactApp/mon-app/src/index.js":"3","/Volumes/Data/ReactApp/mon-app/src/http-common.js":"4","/Volumes/Data/ReactApp/mon-app/src/services/ProductService.js":"5","/Volumes/Data/ReactApp/mon-app/src/components/Product.js":"6","/Volumes/Data/ReactApp/mon-app/src/components/ProductsList.js":"7","/Volumes/Data/ReactApp/mon-app/src/components/AddProduct.js":"8"},{"size":362,"mtime":1607471142930,"results":"9","hashOfConfig":"10"},{"size":1187,"mtime":1607541240060,"results":"11","hashOfConfig":"10"},{"size":243,"mtime":1607541474650,"results":"12","hashOfConfig":"10"},{"size":328,"mtime":1607515424465,"results":"13","hashOfConfig":"10"},{"size":437,"mtime":1607524670136,"results":"14","hashOfConfig":"10"},{"size":4977,"mtime":1607542164873,"results":"15","hashOfConfig":"10"},{"size":3171,"mtime":1607542720683,"results":"16","hashOfConfig":"10"},{"size":3873,"mtime":1607533316641,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16crj3v",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Volumes/Data/ReactApp/mon-app/src/reportWebVitals.js",[],["38","39"],"/Volumes/Data/ReactApp/mon-app/src/App.js",[],"/Volumes/Data/ReactApp/mon-app/src/index.js",[],["40","41"],"/Volumes/Data/ReactApp/mon-app/src/http-common.js",[],"/Volumes/Data/ReactApp/mon-app/src/services/ProductService.js",["42"],"/Volumes/Data/ReactApp/mon-app/src/components/Product.js",["43"],"import React, { useState, useEffect } from \"react\";\nimport ProductDataService from \"../services/ProductService\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nconst Product = props => {\n  const initialProductState = {\n    id: null,\n    name: \"\",\n    type: \"\",\n    price: 0,\n    rating: 0,\n    warranty_years: 0,\n    available: false,\n  };\n  const [currentProduct, setCurrentProduct] = useState(initialProductState);\n  const [message, setMessage] = useState(\"\");\n\n  const getProduct = id => {\n    ProductDataService.get(id)\n      .then(response => {\n        setCurrentProduct(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getProduct(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentProduct({ ...currentProduct, [name]: value });\n  };\n\n  const updateAvailable = status => {\n    var data = {\n      id: currentProduct._id,\n      name: currentProduct.name,\n      type: currentProduct.type,\n      price: currentProduct.price,\n      rating: currentProduct.rating,\n      warranty_years: currentProduct.warranty_years,\n      available: currentProduct.available,\n    };\n\n    ProductDataService.update(currentProduct._id, data)\n      .then(response => {\n        setCurrentProduct({ ...currentProduct, Unavailable: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateProduct = () => {\n    ProductDataService.update(currentProduct._id, currentProduct)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Product was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const deleteProduct = () => {\n    ProductDataService.remove(currentProduct._id)\n      .then(response => {\n        console.log(response.data);\n        props.history.push(\"/Products\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n \n  const classes = useStyles();\n  return (\n    <div>\n      {currentProduct ? (\n        <div className=\"edit-form\">\n          <h4>Product</h4>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          fullWidth\n          id=\"name\" \n          name=\"name\" \n          value={currentProduct.name} \n          onChange={handleInputChange}\n          label=\"Name\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <br/>\n        <br/>\n        <TextField\n          fullWidth\n          id=\"type\" \n          name=\"type\" \n          value={currentProduct.type} \n          onChange={handleInputChange}\n          label=\"Type\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <br/>\n        <br/>\n         <TextField\n         fullWidth\n          id=\"price\" \n          name=\"price\"\n          value={currentProduct.price} \n          onChange={handleInputChange}\n          label=\"Price\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n         <br/>\n        <br/>\n         <TextField\n         fullWidth\n          id=\"rating\" \n          name=\"rating\"\n          value={currentProduct.rating} \n          onChange={handleInputChange}\n          label=\"Rating\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n         <br/>\n        <br/>\n         <TextField\n         fullWidth\n          id=\"warranty_years\" \n          name=\"warranty_years\"\n          value={currentProduct.warranty_years} \n          onChange={handleInputChange}\n          label=\"Warranty Years\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n         <br/>\n        <br/>\n         <TextField\n         fullWidth\n          id=\"available\" \n          name=\"available\"\n          value={currentProduct.available} \n          onChange={handleInputChange}\n          label=\"Available\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </div>\n    </form>\n          <Button className={classes.button} size=\"small\" variant=\"contained\" color=\"secondary\" onClick={deleteProduct}>\n            Delete  \n          </Button>\n          <Button className={classes.button} variant=\"contained\" size=\"small\" color=\"primary\" onClick={updateProduct}>\n            update\n          </Button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Product...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Product;","/Volumes/Data/ReactApp/mon-app/src/components/ProductsList.js",[],"/Volumes/Data/ReactApp/mon-app/src/components/AddProduct.js",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":25,"column":1,"nodeType":"54","endLine":31,"endColumn":3},{"ruleId":"55","severity":1,"message":"56","line":47,"column":9,"nodeType":"57","messageId":"58","endLine":47,"endColumn":24},{"ruleId":"46","replacedBy":"59"},{"ruleId":"48","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'updateAvailable' is assigned a value but never used.","Identifier","unusedVar",["61"],["62"],"no-global-assign","no-unsafe-negation"]